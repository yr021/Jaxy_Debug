/*
 * This file was automatically generated by EvoSuite
 * Mon May 14 15:34:44 GMT 2018
 */

package com.rac021.jax.api.crypto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.rac021.jax.api.crypto.CipherOperation;
import com.rac021.jax.api.crypto.Encryptor;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Encryptor_ESTest extends Encryptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("AES/CBC/PKCS5Padding");
      IvParameterSpec ivParameterSpec0 = encryptor0.getIvSpec();
      assertNotNull(ivParameterSpec0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("]j+WG5'387 'xQvR");
      encryptor0.initDecryptMode();
      byte[] byteArray0 = new byte[9];
      CipherOperation cipherOperation0 = CipherOperation.dofinal;
      byte[] byteArray1 = encryptor0.aes128CBC7Encrypt(byteArray0, cipherOperation0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("]j+WG5'387 'xQvR");
      encryptor0.initEncryptMode();
      byte[] byteArray0 = new byte[5];
      CipherOperation cipherOperation0 = CipherOperation.update;
      byte[] byteArray1 = encryptor0.aes128CBC7Encrypt(byteArray0, cipherOperation0);
      assertNotSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("]j+WG5'387 'xQvR");
      encryptor0.initDecryptMode();
      byte[] byteArray0 = new byte[9];
      CipherOperation cipherOperation0 = CipherOperation.dofinal;
      byte[] byteArray1 = encryptor0.aes128CBC7Decrypt(byteArray0, cipherOperation0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("AC^jZ2d75s[l8g");
      byte[] byteArray0 = new byte[0];
      encryptor0.initEncryptMode();
      CipherOperation cipherOperation0 = CipherOperation.dofinal;
      byte[] byteArray1 = encryptor0.aes128CBC7Decrypt(byteArray0, cipherOperation0);
      byte[] byteArray2 = encryptor0.aes128CBC7Encrypt(byteArray1, cipherOperation0);
      assertNotSame(byteArray2, byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("]j+WG5'387 'xQvR");
      encryptor0.initEncryptMode();
      byte[] byteArray0 = new byte[5];
      CipherOperation cipherOperation0 = CipherOperation.update;
      byte[] byteArray1 = encryptor0.aes128CBC7Decrypt(byteArray0, cipherOperation0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("");
      byte[] byteArray0 = new byte[0];
      encryptor0.initDecryptMode();
      CipherOperation cipherOperation0 = CipherOperation.update;
      // Undeclared exception!
      try { 
        encryptor0.aes128CBC7Encrypt(byteArray0, cipherOperation0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cipher not initialized
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("]GW6r(2k6 E@~2-9");
      encryptor0.initEncryptMode();
      CipherOperation cipherOperation0 = CipherOperation.dofinal;
      // Undeclared exception!
      try { 
        encryptor0.aes128CBC7Encrypt((byte[]) null, cipherOperation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null input buffer
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("");
      byte[] byteArray0 = new byte[5];
      encryptor0.initDecryptMode();
      CipherOperation cipherOperation0 = CipherOperation.dofinal;
      // Undeclared exception!
      try { 
        encryptor0.aes128CBC7Decrypt(byteArray0, cipherOperation0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cipher not initialized
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("]j+WG5'387 'xQvR");
      byte[] byteArray0 = new byte[9];
      CipherOperation cipherOperation0 = CipherOperation.dofinal;
      // Undeclared exception!
      try { 
        encryptor0.aes128CBC7Decrypt(byteArray0, cipherOperation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.rac021.jax.api.crypto.Encryptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("]j+WG5'387 'xQvR");
      byte[] byteArray0 = new byte[9];
      CipherOperation cipherOperation0 = CipherOperation.dofinal;
      // Undeclared exception!
      try { 
        encryptor0.aes128CBC7Encrypt(byteArray0, cipherOperation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.rac021.jax.api.crypto.Encryptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("");
      encryptor0.setCipher((Cipher) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("");
      Cipher cipher0 = encryptor0.getCipher();
      assertNull(cipher0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("");
      encryptor0.initEncryptMode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("");
      encryptor0.setIvSpec((IvParameterSpec) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("");
      encryptor0.initDecryptMode();
      Cipher cipher0 = encryptor0.getCipher();
      assertNotNull(cipher0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Encryptor encryptor0 = new Encryptor("");
      IvParameterSpec ivParameterSpec0 = encryptor0.getIvSpec();
      assertNull(ivParameterSpec0);
  }
}
