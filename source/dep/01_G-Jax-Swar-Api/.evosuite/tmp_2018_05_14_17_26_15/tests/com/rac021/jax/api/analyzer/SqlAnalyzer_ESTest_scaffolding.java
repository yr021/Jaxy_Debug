/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon May 14 15:29:11 GMT 2018
 */

package com.rac021.jax.api.analyzer;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class SqlAnalyzer_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.rac021.jax.api.analyzer.SqlAnalyzer"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "FR"); 
    java.lang.System.setProperty("user.dir", "/home/ryahiaoui/jaxy_2019/jax-Y-ws/dep/01_G-Jax-Swar-Api"); 
    java.lang.System.setProperty("user.home", "/home/ryahiaoui"); 
    java.lang.System.setProperty("user.language", "fr"); 
    java.lang.System.setProperty("user.name", "ryahiaoui"); 
    java.lang.System.setProperty("user.timezone", "Europe/Paris"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SqlAnalyzer_ESTest_scaffolding.class.getClassLoader() ,
      "net.sf.jsqlparser.expression.Alias",
      "net.sf.jsqlparser.statement.create.table.NamedConstraint",
      "net.sf.jsqlparser.statement.drop.Drop",
      "net.sf.jsqlparser.parser.ParseException",
      "net.sf.jsqlparser.statement.select.SelectBody",
      "net.sf.jsqlparser.statement.select.First",
      "net.sf.jsqlparser.expression.WindowElement$Type",
      "net.sf.jsqlparser.expression.operators.relational.RegExpMatchOperatorType",
      "net.sf.jsqlparser.statement.SetStatement",
      "net.sf.jsqlparser.expression.KeepExpression",
      "net.sf.jsqlparser.statement.merge.MergeUpdate",
      "net.sf.jsqlparser.expression.CaseExpression",
      "net.sf.jsqlparser.expression.NotExpression",
      "net.sf.jsqlparser.parser.SimpleCharStream",
      "net.sf.jsqlparser.statement.update.Update",
      "net.sf.jsqlparser.statement.create.index.CreateIndex",
      "net.sf.jsqlparser.expression.CastExpression",
      "net.sf.jsqlparser.expression.operators.arithmetic.Modulo",
      "net.sf.jsqlparser.expression.operators.relational.RegExpMySQLOperator",
      "net.sf.jsqlparser.statement.select.SubJoin",
      "net.sf.jsqlparser.statement.insert.InsertModifierPriority",
      "net.sf.jsqlparser.statement.select.Fetch",
      "net.sf.jsqlparser.expression.operators.relational.IsNullExpression",
      "net.sf.jsqlparser.expression.NullValue",
      "net.sf.jsqlparser.expression.WindowOffset",
      "net.sf.jsqlparser.statement.create.table.CreateTable",
      "net.sf.jsqlparser.statement.select.Pivot",
      "net.sf.jsqlparser.expression.Expression",
      "net.sf.jsqlparser.expression.operators.relational.MinorThanEquals",
      "net.sf.jsqlparser.statement.select.AllColumns",
      "com.rac021.jax.api.exceptions.BusinessException",
      "net.sf.jsqlparser.expression.IntervalExpression",
      "net.sf.jsqlparser.expression.operators.arithmetic.Subtraction",
      "net.sf.jsqlparser.parser.CCJSqlParserVisitor",
      "net.sf.jsqlparser.expression.operators.conditional.OrExpression",
      "net.sf.jsqlparser.schema.Server",
      "net.sf.jsqlparser.expression.AnyType",
      "net.sf.jsqlparser.expression.TimeKeyExpression",
      "net.sf.jsqlparser.expression.operators.relational.ItemsListVisitor",
      "net.sf.jsqlparser.statement.replace.Replace",
      "net.sf.jsqlparser.statement.select.First$Keyword",
      "net.sf.jsqlparser.expression.operators.relational.ItemsList",
      "net.sf.jsqlparser.parser.CCJSqlParser$JJCalls",
      "net.sf.jsqlparser.expression.JsonExpression",
      "net.sf.jsqlparser.expression.HexValue",
      "net.sf.jsqlparser.parser.CCJSqlParserConstants",
      "net.sf.jsqlparser.statement.select.Limit",
      "net.sf.jsqlparser.statement.select.PlainSelect",
      "net.sf.jsqlparser.expression.operators.relational.MinorThan",
      "net.sf.jsqlparser.statement.select.Skip",
      "net.sf.jsqlparser.statement.alter.Alter",
      "net.sf.jsqlparser.expression.operators.relational.InExpression",
      "net.sf.jsqlparser.parser.JJTCCJSqlParserState",
      "net.sf.jsqlparser.expression.AnalyticExpression",
      "net.sf.jsqlparser.expression.WindowOffset$Type",
      "net.sf.jsqlparser.expression.Function",
      "net.sf.jsqlparser.expression.operators.relational.ExpressionList",
      "net.sf.jsqlparser.expression.RowConstructor",
      "net.sf.jsqlparser.expression.WindowElement",
      "net.sf.jsqlparser.expression.DoubleValue",
      "net.sf.jsqlparser.statement.select.LateralSubSelect",
      "net.sf.jsqlparser.statement.alter.AlterOperation",
      "net.sf.jsqlparser.expression.MySQLGroupConcat",
      "net.sf.jsqlparser.expression.operators.relational.EqualsTo",
      "net.sf.jsqlparser.expression.AnyComparisonExpression",
      "net.sf.jsqlparser.statement.select.OrderByElement",
      "net.sf.jsqlparser.expression.operators.relational.OldOracleJoinBinaryExpression",
      "net.sf.jsqlparser.statement.select.SelectVisitor",
      "net.sf.jsqlparser.expression.operators.arithmetic.BitwiseAnd",
      "net.sf.jsqlparser.parser.Node",
      "net.sf.jsqlparser.expression.operators.relational.RegExpMatchOperator",
      "net.sf.jsqlparser.statement.create.view.CreateView",
      "net.sf.jsqlparser.expression.WhenClause",
      "net.sf.jsqlparser.expression.LongValue",
      "net.sf.jsqlparser.statement.execute.Execute",
      "net.sf.jsqlparser.expression.TimestampValue",
      "net.sf.jsqlparser.parser.CCJSqlParserTokenManager",
      "net.sf.jsqlparser.statement.Statement",
      "net.sf.jsqlparser.statement.select.IntoTableVisitor",
      "net.sf.jsqlparser.expression.operators.relational.Between",
      "net.sf.jsqlparser.statement.insert.Insert",
      "net.sf.jsqlparser.statement.create.table.ForeignKeyIndex",
      "net.sf.jsqlparser.expression.StringValue",
      "net.sf.jsqlparser.parser.CCJSqlParserManager",
      "net.sf.jsqlparser.statement.delete.Delete",
      "net.sf.jsqlparser.expression.Parenthesis",
      "net.sf.jsqlparser.expression.DateTimeLiteralExpression",
      "net.sf.jsqlparser.expression.ExpressionVisitor",
      "net.sf.jsqlparser.expression.operators.arithmetic.Multiplication",
      "net.sf.jsqlparser.parser.JSqlParser",
      "net.sf.jsqlparser.parser.TokenMgrError",
      "net.sf.jsqlparser.parser.Token",
      "net.sf.jsqlparser.statement.truncate.Truncate",
      "net.sf.jsqlparser.parser.CCJSqlParser$LookaheadSuccess",
      "net.sf.jsqlparser.expression.operators.arithmetic.BitwiseOr",
      "net.sf.jsqlparser.expression.NumericBind",
      "net.sf.jsqlparser.statement.alter.AlterExpression",
      "net.sf.jsqlparser.expression.operators.arithmetic.Addition",
      "net.sf.jsqlparser.statement.create.table.ColDataType",
      "net.sf.jsqlparser.expression.WithinGroupExpression",
      "net.sf.jsqlparser.expression.operators.relational.GreaterThanEquals",
      "net.sf.jsqlparser.expression.operators.relational.SupportsOldOracleJoinSyntax",
      "net.sf.jsqlparser.statement.select.PivotXml",
      "net.sf.jsqlparser.statement.select.ValuesList",
      "net.sf.jsqlparser.parser.CCJSqlParser",
      "net.sf.jsqlparser.statement.select.SelectItem",
      "net.sf.jsqlparser.schema.MultiPartName",
      "net.sf.jsqlparser.expression.operators.relational.MultiExpressionList",
      "net.sf.jsqlparser.schema.Table",
      "net.sf.jsqlparser.expression.OracleHierarchicalExpression",
      "net.sf.jsqlparser.statement.select.SelectItemVisitor",
      "com.rac021.jax.api.analyzer.SqlAnalyzer",
      "com.rac021.jax.api.pojos.Query",
      "net.sf.jsqlparser.statement.select.FromItem",
      "net.sf.jsqlparser.expression.operators.arithmetic.Concat",
      "net.sf.jsqlparser.statement.select.FunctionItem",
      "net.sf.jsqlparser.expression.operators.relational.GreaterThan",
      "net.sf.jsqlparser.statement.select.SubSelect",
      "net.sf.jsqlparser.statement.select.ExpressionListItem",
      "net.sf.jsqlparser.statement.select.TableFunction",
      "net.sf.jsqlparser.expression.JdbcNamedParameter",
      "net.sf.jsqlparser.statement.select.PivotVisitor",
      "net.sf.jsqlparser.expression.JdbcParameter",
      "net.sf.jsqlparser.parser.SimpleNode",
      "net.sf.jsqlparser.expression.TimeValue",
      "net.sf.jsqlparser.statement.select.Select",
      "net.sf.jsqlparser.statement.select.OrderByVisitor",
      "net.sf.jsqlparser.expression.operators.relational.Matches",
      "net.sf.jsqlparser.statement.select.AllTableColumns",
      "net.sf.jsqlparser.statement.create.view.AlterView",
      "net.sf.jsqlparser.statement.Statements",
      "net.sf.jsqlparser.parser.ASTNodeAccessImpl",
      "net.sf.jsqlparser.statement.select.Top",
      "net.sf.jsqlparser.expression.DateTimeLiteralExpression$DateTime",
      "net.sf.jsqlparser.expression.WindowRange",
      "net.sf.jsqlparser.statement.select.Distinct",
      "net.sf.jsqlparser.statement.create.table.Index",
      "net.sf.jsqlparser.expression.BinaryExpression",
      "net.sf.jsqlparser.expression.operators.relational.LikeExpression",
      "net.sf.jsqlparser.expression.operators.arithmetic.Division",
      "net.sf.jsqlparser.JSQLParserException",
      "net.sf.jsqlparser.expression.operators.relational.ExistsExpression",
      "net.sf.jsqlparser.statement.select.Offset",
      "net.sf.jsqlparser.expression.operators.conditional.AndExpression",
      "net.sf.jsqlparser.expression.OracleHint",
      "net.sf.jsqlparser.statement.merge.Merge",
      "net.sf.jsqlparser.parser.CCJSqlParserTreeConstants",
      "net.sf.jsqlparser.statement.alter.AlterExpression$ColumnDataType",
      "net.sf.jsqlparser.schema.Column",
      "net.sf.jsqlparser.statement.select.OrderByElement$NullOrdering",
      "net.sf.jsqlparser.parser.ASTNodeAccess",
      "net.sf.jsqlparser.expression.UserVariable",
      "net.sf.jsqlparser.statement.select.FromItemVisitor",
      "net.sf.jsqlparser.expression.operators.arithmetic.BitwiseXor",
      "net.sf.jsqlparser.expression.ExtractExpression",
      "net.sf.jsqlparser.expression.AllComparisonExpression",
      "net.sf.jsqlparser.statement.select.Join",
      "net.sf.jsqlparser.expression.SignedExpression",
      "net.sf.jsqlparser.schema.Database",
      "net.sf.jsqlparser.statement.select.SetOperationList",
      "net.sf.jsqlparser.statement.select.WithItem",
      "net.sf.jsqlparser.statement.StatementVisitor",
      "net.sf.jsqlparser.statement.select.SelectExpressionItem",
      "net.sf.jsqlparser.statement.merge.MergeInsert",
      "com.rac021.jax.api.analyzer.Lexer",
      "net.sf.jsqlparser.expression.DateValue",
      "net.sf.jsqlparser.expression.operators.relational.NotEqualsTo",
      "net.sf.jsqlparser.statement.create.table.CheckConstraint",
      "net.sf.jsqlparser.expression.operators.relational.ComparisonOperator",
      "net.sf.jsqlparser.expression.operators.relational.JsonOperator"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SqlAnalyzer_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.rac021.jax.api.analyzer.SqlAnalyzer",
      "com.rac021.jax.api.analyzer.Lexer",
      "net.sf.jsqlparser.parser.CCJSqlParserManager",
      "net.sf.jsqlparser.parser.CCJSqlParser",
      "net.sf.jsqlparser.parser.JJTCCJSqlParserState",
      "net.sf.jsqlparser.parser.CCJSqlParser$LookaheadSuccess",
      "net.sf.jsqlparser.parser.SimpleCharStream",
      "net.sf.jsqlparser.parser.CCJSqlParserTokenManager",
      "net.sf.jsqlparser.parser.Token",
      "net.sf.jsqlparser.parser.CCJSqlParser$JJCalls",
      "net.sf.jsqlparser.parser.SimpleNode",
      "net.sf.jsqlparser.parser.ParseException",
      "net.sf.jsqlparser.parser.CCJSqlParserConstants",
      "net.sf.jsqlparser.JSQLParserException",
      "net.sf.jsqlparser.statement.create.view.AlterView",
      "net.sf.jsqlparser.statement.alter.AlterExpression",
      "com.rac021.jax.api.pojos.Query",
      "net.sf.jsqlparser.statement.insert.Insert",
      "net.sf.jsqlparser.statement.drop.Drop",
      "net.sf.jsqlparser.statement.select.SelectExpressionItem",
      "net.sf.jsqlparser.statement.create.table.ColDataType",
      "net.sf.jsqlparser.expression.CastExpression",
      "net.sf.jsqlparser.expression.operators.relational.MultiExpressionList",
      "net.sf.jsqlparser.statement.select.ValuesList",
      "net.sf.jsqlparser.statement.alter.AlterExpression$ColumnDataType",
      "net.sf.jsqlparser.parser.TokenMgrError",
      "net.sf.jsqlparser.statement.create.table.Index",
      "net.sf.jsqlparser.statement.create.view.CreateView",
      "net.sf.jsqlparser.statement.create.table.CreateTable",
      "net.sf.jsqlparser.statement.create.index.CreateIndex",
      "net.sf.jsqlparser.statement.select.Select",
      "net.sf.jsqlparser.statement.select.PlainSelect",
      "net.sf.jsqlparser.statement.select.Pivot",
      "net.sf.jsqlparser.expression.BinaryExpression",
      "net.sf.jsqlparser.expression.operators.relational.LikeExpression",
      "net.sf.jsqlparser.expression.operators.arithmetic.Concat",
      "net.sf.jsqlparser.statement.select.Limit",
      "net.sf.jsqlparser.statement.merge.Merge",
      "net.sf.jsqlparser.statement.update.Update",
      "net.sf.jsqlparser.expression.operators.relational.InExpression",
      "net.sf.jsqlparser.statement.select.AllColumns",
      "net.sf.jsqlparser.statement.select.FunctionItem",
      "net.sf.jsqlparser.statement.select.TableFunction",
      "net.sf.jsqlparser.statement.select.AllTableColumns",
      "net.sf.jsqlparser.statement.select.LateralSubSelect",
      "net.sf.jsqlparser.expression.RowConstructor",
      "net.sf.jsqlparser.statement.alter.Alter",
      "net.sf.jsqlparser.expression.JdbcNamedParameter",
      "net.sf.jsqlparser.expression.OracleHierarchicalExpression"
    );
  }
}
