/*
 * This file was automatically generated by EvoSuite
 * Mon May 14 15:37:24 GMT 2018
 */

package com.rac021.jax.api.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.rac021.jax.api.exceptions.ClientExceptionMapper;
import javax.ws.rs.WebApplicationException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientExceptionMapper_ESTest extends ClientExceptionMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClientExceptionMapper clientExceptionMapper0 = new ClientExceptionMapper();
      WebApplicationException webApplicationException0 = mock(WebApplicationException.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        clientExceptionMapper0.toResponse(webApplicationException0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: org.glassfish.jersey.internal.RuntimeDelegateImpl
         //
         verifyException("javax.ws.rs.ext.RuntimeDelegate", e);
      }
  }
}
